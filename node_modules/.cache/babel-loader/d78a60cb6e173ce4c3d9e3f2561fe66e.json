{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dragon Slayer\\\\Desktop\\\\FoodShop\\\\src\\\\components\\\\Cart\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport styles from './Checkout.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === '';\n\nconst validPostal = value => value.trim() === 5;\n\nconst Checkout = props => {\n  _s();\n\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostal = postalInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalIsValid = validPostal(enteredPostal);\n    setFormInputsValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostalIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredCityIsValid && enteredPostalIsValid && enteredStreetIsValid;\n\n    if (!formIsValid) {\n      return;\n    } //Submit Cart Data\n\n  };\n\n  const nameErrorStyle = `${styles.control} ${formInputsValidity.name ? '' : styles.invalid}`;\n  const streetErrorStyle = `${styles.control} ${formInputsValidity.street ? '' : styles.invalid}`;\n  const postalErrorStyle = `${styles.control} ${formInputsValidity.postalCode ? '' : styles.invalid}`;\n  const cityErrorStyle = `${styles.control} ${formInputsValidity.city ? '' : styles.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameErrorStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please Enter A Valid Name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: streetErrorStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), !formInputsValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please Enter A Valid Street!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: postalErrorStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), !formInputsValidity.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please Enter A Valid Post Code! (5 Integers Only)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 44\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cityErrorStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), !formInputsValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please Enter A Valid City!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"LxuR3l0irGGNu5k0Co8cwv93//s=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["C:/Users/Dragon Slayer/Desktop/FoodShop/src/components/Cart/Checkout.js"],"names":["React","useRef","useState","styles","isEmpty","value","trim","validPostal","Checkout","props","formInputsValidity","setFormInputsValidity","name","street","city","postalCode","nameInputRef","streetInputRef","postalInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostal","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostalIsValid","formIsValid","nameErrorStyle","control","invalid","streetErrorStyle","postalErrorStyle","cityErrorStyle","form","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import React, {useRef, useState} from 'react';\r\nimport styles from './Checkout.module.css';\r\n\r\nconst isEmpty = value => value.trim() === '';\r\nconst validPostal = value => value.trim() ===5;\r\n\r\nconst Checkout = (props) => {\r\n\r\n    const [formInputsValidity, setFormInputsValidity] = useState(\r\n        {\r\n            name: true,\r\n            street: true,\r\n            city: true,\r\n            postalCode: true \r\n        });\r\n\r\n    const nameInputRef = useRef();\r\n    const streetInputRef = useRef();\r\n    const postalInputRef = useRef();\r\n    const cityInputRef = useRef();\r\n\r\n\r\n\r\n\r\n\r\nconst confirmHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredName = nameInputRef.current.value;\r\n    const enteredStreet = streetInputRef.current.value;\r\n    const enteredPostal = postalInputRef.current.value;\r\n    const enteredCity = cityInputRef.current.value;\r\n\r\n    const enteredNameIsValid = !isEmpty(enteredName);\r\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\r\n    const enteredCityIsValid = !isEmpty(enteredCity);\r\n    const enteredPostalIsValid = validPostal(enteredPostal);\r\n\r\n\r\n    setFormInputsValidity(\r\n    {\r\n        name: enteredNameIsValid,\r\n        street: enteredStreetIsValid,\r\n        city: enteredCityIsValid,\r\n        postalCode: enteredPostalIsValid \r\n    });\r\n\r\n    const formIsValid = \r\n           enteredNameIsValid \r\n        && enteredCityIsValid \r\n        && enteredPostalIsValid\r\n        && enteredStreetIsValid;\r\n    \r\n    if(!formIsValid){\r\n        return;\r\n    }\r\n\r\n\r\n    //Submit Cart Data\r\n\r\n};\r\n\r\n\r\nconst nameErrorStyle = `${styles.control} ${formInputsValidity.name ? '' : styles.invalid}`;\r\nconst streetErrorStyle = `${styles.control} ${formInputsValidity.street ? '' : styles.invalid}`;\r\nconst postalErrorStyle = `${styles.control} ${formInputsValidity.postalCode ? '' : styles.invalid}`;\r\nconst cityErrorStyle = `${styles.control} ${formInputsValidity.city ? '' : styles.invalid}`;\r\n\r\n\r\n  return (\r\n    <form className={styles.form} onSubmit={confirmHandler}>\r\n      \r\n      <div className={nameErrorStyle}>\r\n        <label htmlFor='name'>Your Name</label>\r\n        <input \r\n            type='text' \r\n            id='name' \r\n            ref={nameInputRef}\r\n        />\r\n        {!formInputsValidity.name && <p>Please Enter A Valid Name!</p>}\r\n      </div>\r\n\r\n\r\n      <div className={streetErrorStyle}>\r\n        <label htmlFor='street'>Street</label>\r\n        <input \r\n            type='text' \r\n            id='street' \r\n            ref={streetInputRef}\r\n        /> \r\n        {!formInputsValidity.street && <p>Please Enter A Valid Street!</p>}\r\n      </div>\r\n\r\n\r\n      <div className={postalErrorStyle}>\r\n        <label htmlFor='postal'>Postal Code</label>\r\n        <input \r\n            type='text' \r\n            id='postal' \r\n            ref={postalInputRef}\r\n        />\r\n        {!formInputsValidity.postalCode && <p>Please Enter A Valid Post Code! (5 Integers Only)</p>}\r\n      </div>\r\n\r\n      <div className={cityErrorStyle}>\r\n        <label htmlFor='city'>City</label>\r\n        <input \r\n            type='text' \r\n            id='city' \r\n            ref={cityInputRef}\r\n        />\r\n        {!formInputsValidity.city && <p>Please Enter A Valid City!</p>}\r\n      </div>\r\n      \r\n      <div className={styles.actions}>\r\n        <button type='button' onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button className={styles.submit}>Confirm</button>\r\n      </div>\r\n\r\n\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;"]},"metadata":{},"sourceType":"module"}