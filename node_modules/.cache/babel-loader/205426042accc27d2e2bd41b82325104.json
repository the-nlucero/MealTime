{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dragon Slayer\\\\Desktop\\\\FoodShop\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nfunction cartReducer(state, action) {\n  if (action.tpye === 'ADD_CART_ITEM') {\n    const updatedItems = state.items.concat(action.item);\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n}\n\nfunction CartProvider(props) {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  function addItemToCartHandler(item) {\n    dispatchCartAction({\n      type: 'ADD_CART_ITEM',\n      item: item\n    });\n  }\n\n  function removeItemFromCartHandler(id) {\n    dispatchCartAction({\n      type: 'REMOVE_CART_ITEM',\n      id: id\n    });\n  }\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/Dragon Slayer/Desktop/FoodShop/src/store/CartProvider.js"],"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","tpye","updatedItems","concat","item","updatedTotalAmount","price","amount","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","type","removeItemFromCartHandler","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAE,EADc;AAErBC,EAAAA,WAAW,EAAE;AAFQ,CAAzB;;AAIA,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,MAA5B,EAAmC;AAC/B,MAAGA,MAAM,CAACC,IAAP,KAAgB,eAAnB,EAAmC;AAC/B,UAAMC,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAArB;AACA,UAAMC,kBAAkB,GAAGN,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYE,KAAZ,GAAoBN,MAAM,CAACI,IAAP,CAAYG,MAA/E;AACA,WAAO;AACHX,MAAAA,KAAK,EAAEM,YADJ;AAEHL,MAAAA,WAAW,EAAEQ;AAFV,KAAP;AAIH;;AACD,SAAQV,gBAAR;AACH;;AAED,SAASa,YAAT,CAAsBC,KAAtB,EAA4B;AAAA;;AACxB,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkClB,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAAlD;;AAEJ,WAASiB,oBAAT,CAA8BR,IAA9B,EAAmC;AAC/BO,IAAAA,kBAAkB,CAAC;AACfE,MAAAA,IAAI,EAAE,eADS;AAEfT,MAAAA,IAAI,EAAEA;AAFS,KAAD,CAAlB;AAIH;;AAED,WAASU,yBAAT,CAAmCC,EAAnC,EAAsC;AAClCJ,IAAAA,kBAAkB,CAAC;AACfE,MAAAA,IAAI,EAAE,kBADS;AAEfE,MAAAA,EAAE,EAAEA;AAFW,KAAD,CAAlB;AAIH;;AAGD,QAAMC,WAAW,GAAG;AAChBpB,IAAAA,KAAK,EAAEc,SAAS,CAACd,KADD;AAEhBC,IAAAA,WAAW,EAAEa,SAAS,CAACb,WAFP;AAGhBoB,IAAAA,OAAO,EAAEL,oBAHO;AAIhBM,IAAAA,UAAU,EAAEJ;AAJI,GAApB;AAMI,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACKP,KAAK,CAACU;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA7BQX,Y;;KAAAA,Y;AA+BT,eAAeA,YAAf","sourcesContent":["import React, {useReducer} from 'react'\r\nimport CartContext from './cart-context';\r\n\r\nconst defaultCartState = {\r\n    items: [],\r\n    totalAmount: 0,\r\n};\r\nfunction cartReducer(state, action){\r\n    if(action.tpye === 'ADD_CART_ITEM'){\r\n        const updatedItems = state.items.concat(action.item);\r\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\r\n        return {\r\n            items: updatedItems,\r\n            totalAmount: updatedTotalAmount\r\n        };\r\n    }\r\n    return (defaultCartState);\r\n}\r\n\r\nfunction CartProvider(props){\r\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\r\n\r\nfunction addItemToCartHandler(item){\r\n    dispatchCartAction({\r\n        type: 'ADD_CART_ITEM',\r\n        item: item\r\n    });\r\n}\r\n\r\nfunction removeItemFromCartHandler(id){\r\n    dispatchCartAction({\r\n        type: 'REMOVE_CART_ITEM',\r\n        id: id\r\n    });\r\n}\r\n\r\n\r\nconst cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemFromCartHandler \r\n}\r\n    return(\r\n        <CartContext.Provider value={cartContext}>\r\n            {props.children}\r\n        </CartContext.Provider>\r\n    );\r\n}\r\n\r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}