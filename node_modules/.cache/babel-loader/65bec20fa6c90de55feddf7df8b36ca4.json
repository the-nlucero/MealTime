{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dragon Slayer\\\\Desktop\\\\FoodShop\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styles from './AvailableMeals.module.css';\nimport MealItem from './MealItem/MealItem';\nimport Card from '../UI/Card.js'; //Renders Actual List to Screen\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AvailableMeals() {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch('https://react-http-a3c26-default-rtdb.firebaseio.com/meals');\n      const responseData = await response.json();\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n\n    fetchMeals();\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.MealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this);\n  }\n\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AvailableMeals, \"Opmz/k+5zTZAoo/mes+3X6ZqQsM=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["C:/Users/Dragon Slayer/Desktop/FoodShop/src/components/Meals/AvailableMeals.js"],"names":["React","useEffect","useState","styles","MealItem","Card","AvailableMeals","meals","setMeals","isLoading","setIsLoading","fetchMeals","response","fetch","responseData","json","loadedMeals","key","push","id","name","description","price","MealsLoading","mealsList","map","meal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,IAAP,MAAiB,eAAjB,C,CAMA;;;;AACA,SAASC,cAAT,GAAyB;AAAA;;AAEvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,UAAU,GAAG,YAAY;AAC7B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4DAAD,CAA5B;AACA,YAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;AAEA,YAAMC,WAAW,GAAG,EAApB;;AAEA,WAAK,MAAMC,GAAX,IAAkBH,YAAlB,EAA+B;AAC7BE,QAAAA,WAAW,CAACE,IAAZ,CACE;AACAC,UAAAA,EAAE,EAAEF,GADJ;AAEAG,UAAAA,IAAI,EAAEN,YAAY,CAACG,GAAD,CAAZ,CAAkBG,IAFxB;AAGAC,UAAAA,WAAW,EAAEP,YAAY,CAACG,GAAD,CAAZ,CAAkBI,WAH/B;AAIAC,UAAAA,KAAK,EAAER,YAAY,CAACG,GAAD,CAAZ,CAAkBK;AAJzB,SADF;AAOD;;AAEDd,MAAAA,QAAQ,CAACQ,WAAD,CAAR;AACAN,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAlBD;;AAoBAC,IAAAA,UAAU;AAEX,GAvBQ,EAuBN,EAvBM,CAAT;;AAyBA,MAAGF,SAAH,EAAa;AACX,wBACA;AAAS,MAAA,SAAS,EAAEN,MAAM,CAACoB,YAA3B;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADA;AAMD;;AAEC,QAAMC,SAAS,GAAGjB,KAAK,CAACkB,GAAN,CAAUC,IAAI,iBAChC,QAAC,QAAD;AAEI,IAAA,EAAE,EAAEA,IAAI,CAACP,EAFb;AAGI,IAAA,IAAI,EAAEO,IAAI,CAACN,IAHf;AAII,IAAA,WAAW,EAAEM,IAAI,CAACL,WAJtB;AAKI,IAAA,KAAK,EAAEK,IAAI,CAACJ;AALhB,KACSI,IAAI,CAACP,EADd;AAAA;AAAA;AAAA;AAAA,UADkB,CAAlB;AASA,sBACI;AAAS,IAAA,SAAS,EAAEhB,MAAM,CAACI,KAA3B;AAAA,2BACC,QAAC,IAAD;AAAA,6BACG;AAAA,kBACKiB;AADL;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAzDQlB,c;;KAAAA,c;AA2DT,eAAeA,cAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport styles from './AvailableMeals.module.css';\r\nimport MealItem from './MealItem/MealItem';\r\nimport Card from '../UI/Card.js';\r\n\r\n\r\n\r\n\r\n\r\n//Renders Actual List to Screen\r\nfunction AvailableMeals(){\r\n\r\n  const [meals, setMeals] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchMeals = async () => {\r\n      const response = await fetch('https://react-http-a3c26-default-rtdb.firebaseio.com/meals');\r\n      const responseData = await response.json();\r\n\r\n      const loadedMeals = [];\r\n\r\n      for (const key in responseData){\r\n        loadedMeals.push(\r\n          {\r\n          id: key,\r\n          name: responseData[key].name,\r\n          description: responseData[key].description,\r\n          price: responseData[key].price\r\n          })\r\n      }\r\n\r\n      setMeals(loadedMeals);\r\n      setIsLoading(false);\r\n    };\r\n\r\n    fetchMeals();\r\n    \r\n  }, []);\r\n\r\n  if(isLoading){\r\n    return (\r\n    <section className={styles.MealsLoading}> \r\n      <p>Loading ...</p>\r\n    </section>\r\n    )\r\n\r\n  }\r\n\r\n    const mealsList = meals.map(meal => \r\n    <MealItem \r\n        key={meal.id}\r\n        id={meal.id}\r\n        name={meal.name}\r\n        description={meal.description}\r\n        price={meal.price}\r\n    />);\r\n\r\n    return(\r\n        <section className={styles.meals}>\r\n         <Card> \r\n            <ul>\r\n                {mealsList}\r\n            </ul>\r\n          </Card>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default AvailableMeals;"]},"metadata":{},"sourceType":"module"}