{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dragon Slayer\\\\Desktop\\\\FoodShop\\\\src\\\\components\\\\Cart\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport Modal from '../UI/Modal';\nimport CartContext from '../../store/cart-context';\nimport CartItem from './CartItem';\nimport Checkout from './Checkout';\nimport styles from './Cart.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cart(props) {\n  _s();\n\n  const [isCheckout, setIsCheckout] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [didSubmit, setDidSubmit] = useState(false);\n  const cartCtx = useContext(CartContext);\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  function cartItemRemoveHandler(id) {\n    cartCtx.removeItem(id);\n  }\n\n  function cartItemAddHandler(item) {\n    cartCtx.addItem({ ...item,\n      amount: 1\n    });\n  }\n\n  function orderHandler() {\n    setIsSubmitting();\n    setIsCheckout(true);\n  }\n\n  const submitOrderHandler = async userData => {\n    setIsSubmitting(true);\n    await fetch('https://react-http-a3c26-default-rtdb.firebaseio.com/orders.json', {\n      method: 'POST',\n      body: JSON.stringify({\n        user: userData,\n        orderedItems: cartCtx.items\n      })\n    });\n    setIsSubmitting(false);\n    setDidSubmit(true);\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: styles['cart-items'],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n\n  const modalActions = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.actions,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles['button--alt'],\n      onClick: props.onClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.button,\n      onClick: orderHandler,\n      children: \"Checkout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n\n  const cartModalContent = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" Total Amount \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", totalAmount, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this), isCheckout && /*#__PURE__*/_jsxDEV(Checkout, {\n      onConfirm: submitOrderHandler,\n      onCancel: props.onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 20\n    }, this), !isCheckout && modalActions]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 1\n  }, this);\n\n  const isSubmittingModalContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Sending Order Data\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n\n  const didSubmitModalContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Successfully Sent The Order!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: [!isSubmitting && !didSubmit && cartModalContent, isSubmitting && isSubmittingModalContent, didSubmit && didSubmitModalContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Cart, \"mkyP1T14krwt2zz5rXlJIrG6NCM=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["C:/Users/Dragon Slayer/Desktop/FoodShop/src/components/Cart/Cart.js"],"names":["React","useContext","useState","Modal","CartContext","CartItem","Checkout","styles","Cart","props","isCheckout","setIsCheckout","isSubmitting","setIsSubmitting","didSubmit","setDidSubmit","cartCtx","totalAmount","toFixed","hasItems","items","length","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","addItem","amount","orderHandler","submitOrderHandler","userData","fetch","method","body","JSON","stringify","user","orderedItems","cartItems","map","name","price","bind","modalActions","actions","onClose","button","cartModalContent","total","isSubmittingModalContent","didSubmitModalContent"],"mappings":"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","sourcesContent":["import React, {useContext, useState} from 'react';\r\nimport Modal from '../UI/Modal';\r\nimport CartContext from '../../store/cart-context';\r\nimport CartItem from './CartItem';\r\nimport Checkout from './Checkout';\r\nimport styles from './Cart.module.css';\r\n\r\nfunction Cart(props){\r\n\r\nconst [isCheckout, setIsCheckout] = useState(false);\r\nconst [isSubmitting, setIsSubmitting] = useState(false);\r\nconst [didSubmit, setDidSubmit] = useState(false);\r\n\r\n\r\n\r\nconst cartCtx = useContext(CartContext);\r\n\r\nconst totalAmount =`$${cartCtx.totalAmount.toFixed(2)}`;\r\nconst hasItems = cartCtx.items.length > 0;\r\n\r\nfunction cartItemRemoveHandler(id){\r\n    cartCtx.removeItem(id);\r\n}\r\n\r\nfunction cartItemAddHandler(item){\r\n    cartCtx.addItem({...item, amount:1});\r\n}\r\n\r\nfunction orderHandler(){\r\n    setIsSubmitting()\r\n    setIsCheckout(true);\r\n}\r\n\r\nconst submitOrderHandler = async (userData) => {\r\n    setIsSubmitting(true);\r\n    await fetch('https://react-http-a3c26-default-rtdb.firebaseio.com/orders.json', \r\n{\r\n            method: 'POST',\r\n            body: JSON.stringify(\r\n                {\r\n                    user: userData,\r\n                    orderedItems: cartCtx.items,\r\n                }),\r\n        });\r\n        setIsSubmitting(false);\r\n        setDidSubmit(true);\r\n}\r\n\r\n\r\nconst cartItems = (\r\n    <ul className={styles['cart-items']}>\r\n      {cartCtx.items.map((item) => (\r\n        <CartItem\r\n          key={item.id}\r\n          name={item.name}\r\n          amount={item.amount}\r\n          price={item.price}\r\n          onRemove={cartItemRemoveHandler.bind(null, item.id)}\r\n          onAdd={cartItemAddHandler.bind(null, item)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\n\r\nconst modalActions = (\r\n        <div className={styles.actions}> \r\n            <button \r\n                className={styles['button--alt']} \r\n                onClick={props.onClose}> \r\n                 Close \r\n            </button>\r\n            {hasItems && (\r\n                <button \r\n                    className={styles.button} \r\n                    onClick={orderHandler}> \r\n                    Checkout \r\n                </button>)}\r\n        </div>\r\n);\r\n\r\nconst cartModalContent = (\r\n<React.Fragment> \r\n    {cartItems}\r\n    <div className={styles.total}> \r\n        <span> Total Amount </span>\r\n        <span> {totalAmount} </span>\r\n    </div>\r\n\r\n    {isCheckout && <Checkout onConfirm={submitOrderHandler} onCancel={props.onClose} />}\r\n    {!isCheckout && modalActions}\r\n</React.Fragment>\r\n);\r\n\r\nconst isSubmittingModalContent = (\r\n    <p>Sending Order Data</p>\r\n);\r\n\r\nconst didSubmitModalContent = (\r\n    <p>Successfully Sent The Order!</p>\r\n);\r\n\r\n    return(\r\n        <Modal onClose={props.onClose}> \r\n            {!isSubmitting && !didSubmit && cartModalContent}\r\n            {isSubmitting && isSubmittingModalContent}\r\n            {didSubmit && didSubmitModalContent}\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default Cart;"]},"metadata":{},"sourceType":"module"}